;; Object include/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "include/"
  :tables
  (list
    (semanticdb-table "Card.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("CARD_HPP" variable (:constant-flag t) nil [26 34])
            ("Card" type
               (:members 
                  ( ("color" variable (:type ("Card_Color" type (:type "class") nil nil)) (reparse-symbol classsubparts) [253 270])
                    ("figure" variable (:type ("Card_Figure" type (:type "class") nil nil)) (reparse-symbol classsubparts) [273 292])
                    ("public" label nil (reparse-symbol classsubparts) [293 300])
                    ("Card" function
                       (:constructor-flag t
                        :arguments 
                          ( ("newFigure" variable
                               (:default-value "Card_Figure"
                                :type ("Card_Figure" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [317 352])
                            ("" variable (:type ("None" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [354 359])
                            ("newColor" variable
                               (:default-value "Card_Color"
                                :type ("Card_Color" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [376 408])
                            ("" variable (:type ("None" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [410 415]))                          
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [312 461])
                    ("getColor" function
                       (:prototype-flag t
                        :constant-flag t
                        :type ("Card_Color" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [465 499])
                    ("getFigure" function
                       (:prototype-flag t
                        :constant-flag t
                        :type ("Card_Figure" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [502 538])
                    ("==" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("card" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [558 575]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [541 582])
                    ("!=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("card" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [602 619]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [585 626]))                  
                :type "class")
                nil [238 629]))          
      :file "Card.hpp"
      :pointmax 653
      :fsize 652
      :lastmodtime '(21802 40976 953613 761000)
      :unmatched-syntax '((punctuation 461 . 462) (punctuation 409 . 410) (punctuation 408 . 409) (punctuation 353 . 354) (punctuation 352 . 353) (EXPLICIT 303 . 311) (punctuation 235 . 236) (semantic-list 151 . 235) (INT 147 . 150) (UNSIGNED 138 . 146) (punctuation 136 . 137) (symbol 124 . 135) (CLASS 118 . 123) (ENUM 113 . 117) (punctuation 110 . 111) (semantic-list 73 . 110) (INT 69 . 72) (UNSIGNED 60 . 68) (punctuation 58 . 59) (symbol 47 . 57) (CLASS 41 . 46) (ENUM 36 . 40) (punctuation 461 . 462) (punctuation 409 . 410) (punctuation 408 . 409) (punctuation 353 . 354) (punctuation 352 . 353) (EXPLICIT 303 . 311) (punctuation 235 . 236) (semantic-list 151 . 235) (INT 147 . 150) (UNSIGNED 138 . 146) (punctuation 136 . 137) (symbol 124 . 135) (CLASS 118 . 123) (ENUM 113 . 117) (punctuation 110 . 111) (semantic-list 73 . 110) (INT 69 . 72) (UNSIGNED 60 . 68) (punctuation 58 . 59) (symbol 47 . 57) (CLASS 41 . 46) (ENUM 36 . 40) (punctuation 461 . 462) (punctuation 409 . 410) (punctuation 408 . 409) (punctuation 353 . 354) (punctuation 352 . 353) (EXPLICIT 303 . 311) (OPERATOR 584 . 592) (BOOL 579 . 583) (punctuation 461 . 462) (punctuation 409 . 410) (punctuation 408 . 409) (punctuation 353 . 354) (punctuation 352 . 353) (EXPLICIT 303 . 311) (punctuation 235 . 236) (semantic-list 151 . 235) (INT 147 . 150) (UNSIGNED 138 . 146) (punctuation 136 . 137) (symbol 124 . 135) (CLASS 118 . 123) (ENUM 113 . 117) (punctuation 110 . 111) (semantic-list 73 . 110) (INT 69 . 72) (UNSIGNED 60 . 68) (punctuation 58 . 59) (symbol 47 . 57) (CLASS 41 . 46) (ENUM 36 . 40) (OPERATOR 584 . 592) (BOOL 579 . 583) (punctuation 461 . 462) (punctuation 409 . 410) (punctuation 408 . 409) (punctuation 353 . 354) (punctuation 352 . 353) (EXPLICIT 303 . 311) (punctuation 461 . 462) (punctuation 409 . 410) (punctuation 408 . 409) (punctuation 353 . 354) (punctuation 352 . 353) (EXPLICIT 303 . 311) (punctuation 235 . 236) (semantic-list 151 . 235) (INT 147 . 150) (UNSIGNED 138 . 146) (punctuation 136 . 137) (symbol 124 . 135) (CLASS 118 . 123) (ENUM 113 . 117) (punctuation 110 . 111) (semantic-list 73 . 110) (INT 69 . 72) (UNSIGNED 60 . 68) (punctuation 58 . 59) (symbol 47 . 57) (CLASS 41 . 46) (ENUM 36 . 40) (punctuation 461 . 462) (punctuation 409 . 410) (punctuation 408 . 409) (punctuation 353 . 354) (punctuation 352 . 353) (EXPLICIT 303 . 311) (punctuation 235 . 236) (semantic-list 151 . 235) (INT 147 . 150) (UNSIGNED 138 . 146) (punctuation 136 . 137) (symbol 124 . 135) (CLASS 118 . 123) (ENUM 113 . 117) (punctuation 110 . 111) (semantic-list 73 . 110) (INT 69 . 72) (UNSIGNED 60 . 68) (punctuation 58 . 59) (symbol 47 . 57) (CLASS 41 . 46) (ENUM 36 . 40))
      :lexical-table 
        '(("CARD_HPP")
          )
)
    (semanticdb-table "myCards.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("MYCARDS_HH" variable (:constant-flag t) nil [28 38])
            ("Card.hpp" include nil nil [40 59])
            ("MAX_FIGURE" variable
               (:constant-flag t
                :default-value "13"
                :type "int")
                nil [61 87])
            ("MAX_COLOR" variable
               (:constant-flag t
                :default-value "4"
                :type "int")
                nil [88 112])
            ("myCards" type
               (:members 
                  ( ("myCards" variable
                       (:dereference 2
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [132 168])
                    ("public" label nil (reparse-symbol classsubparts) [169 176])
                    ("addCard" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [192 209]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [179 210])
                    ("removeCard" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [229 246]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [213 247])
                    ("isThere" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [263 280]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [250 281]))                  
                :type "class")
                nil [114 284]))          
      :file "myCards.hpp"
      :pointmax 293
      :fsize 292
      :lastmodtime '(21802 40580 345716 613000)
      :unmatched-syntax '((symbol 243 . 250) (BOOL 238 . 242) (symbol 243 . 250) (BOOL 238 . 242))
      :lexical-table 
        '(("MYCARDS_HH")
          )
)
    (semanticdb-table "Table.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("TABLE_HPP" variable (:constant-flag t) nil [27 36])
            ("myCards.hpp" include nil nil [38 60])
            ("enemyCards.hpp" include nil nil [61 86])
            ("stackCards.hpp" include nil nil [87 112])
            ("Table" type
               (:superclasses 
                  ( ("enemyCards" type
                       (:protection "public"
                        :type "class")
                        nil nil)
                    ("myCards" type
                       (:protection "public"
                        :type "class")
                        nil nil)
                    ("stackCards" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [209 216]))                  
                :type "class")
                nil [114 305]))          
      :file "Table.hpp"
      :pointmax 330
      :fsize 329
      :lastmodtime '(21802 42789 927095 86000)
      :unmatched-syntax '((punctuation 301 . 302) (DELETE 295 . 301) (punctuation 293 . 294) (semantic-list 277 . 292) (symbol 272 . 277) (punctuation 290 . 291) (punctuation 268 . 269) (DELETE 262 . 268) (punctuation 260 . 261) (semantic-list 245 . 259) (symbol 240 . 245) (punctuation 236 . 237) (DEFAULT 229 . 236) (punctuation 227 . 228) (semantic-list 224 . 226) (symbol 219 . 224))
      :lexical-table 
        '(("TABLE_HPP")
          )
)
    (semanticdb-table "enemyCards.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ENEMYCARDS_HPP" variable (:constant-flag t) nil [32 46])
            ("Card.hpp" include nil nil [48 67])
            ("vector" include (:system-flag t) nil [68 85])
            ("MAX_ENEMY_CARDS" variable
               (:constant-flag t
                :default-value "10"
                :type "int")
                nil [87 118])
            ("enemyCards" type
               (:members 
                  ( ("enemyCard" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [141 169])
                    ("public" label nil (reparse-symbol classsubparts) [174 181])
                    ("addCard" function
                       (:prototype-flag t
                        :arguments 
                          ( ("card" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [197 214]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [184 215])
                    ("deleteCard" function
                       (:prototype-flag t
                        :arguments 
                          ( ("searchCard" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Card" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [234 257]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [218 258])
                    ("getCardsLeft" function
                       (:prototype-flag t
                        :constant-flag t
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [261 301])
                    ("getLastTakenCard" function
                       (:prototype-flag t
                        :constant-flag t
                        :type ("Card" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [304 341]))                  
                :type "class")
                nil [120 344]))          
      :file "enemyCards.hpp"
      :pointmax 374
      :fsize 373
      :lastmodtime '(21799 61695 909724 318000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ENEMYCARDS_HPP")
          )
)
    (semanticdb-table "stackCards.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("STACKCARDS_HPP" variable (:constant-flag t) nil [32 46])
            ("Card.hpp" include nil nil [48 67])
            ("vector" include (:system-flag t) nil [68 85])
            ("stackCards" type
               (:members 
                  ( ("lostCards" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Card" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [108 136])
                    ("public" label nil (reparse-symbol classsubparts) [141 148]))                  
                :type "class")
                nil [87 154]))          
      :file "stackCards.hpp"
      :pointmax 184
      :fsize 183
      :lastmodtime '(21801 31841 9305 757000)
      :unmatched-syntax nil
      :lexical-table 
        '(("STACKCARDS_HPP")
          )
)
    (semanticdb-table "detectionSystem.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("DETECTIONSYSTEM_HPP" variable (:constant-flag t) nil [37 56])
            ("string" include (:system-flag t) nil [58 75])
            ("vector" include (:system-flag t) nil [76 93])
            ("opencv/cv.hpp" include (:system-flag t) nil [94 118])
            ("THRESHOLD" variable
               (:constant-flag t
                :default-value "0.99"
                :type "double")
                nil [120 150])
            ("PRT_SCR_IMAGE_NAME" variable
               (:constant-flag t
                :default-value "\"foto.png\""
                :type ("std::string" type (:type "class") nil nil))
                nil [151 201])
            ("MATCH_METHOD" variable
               (:constant-flag t
                :default-value "CV_TM_CCOEFF_NORMED"
                :type "int")
                nil [202 247])
            ("MAX_TRACKBAR" variable
               (:constant-flag t
                :default-value "15"
                :type "int")
                nil [248 276])
            ("figureImageNames" variable
               (:constant-flag t
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [278 656])
            ("colorImageNames" variable
               (:constant-flag t
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [658 739])
            ("detectionSystem" type
               (:members 
                  ( ("cv::Mat" variable (:type "int") (reparse-symbol classsubparts) [781 789])
                    ("figure_templates" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Image" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [792 828])
                    ("color_templates" variable (:type ("std::vector" type
                         (:template-specifier 
                            ( ("Image" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [831 866])
                    ("loadedTableImage" variable (:type ("Image" type (:type "class") nil nil)) (reparse-symbol classsubparts) [869 892])
                    ("public" label nil (reparse-symbol classsubparts) [894 901])
                    ("detectionSystem" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("detectionSystem" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [904 922]))                  
                :type "class")
                nil [741 925]))          
      :file "detectionSystem.hpp"
      :pointmax 960
      :fsize 959
      :lastmodtime '(21802 42710 736767 925000)
      :unmatched-syntax nil
      :lexical-table 
        '(("DETECTIONSYSTEM_HPP")
          )
))
  :file "!home!klapeyron!Pulpit!projekt!include!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
